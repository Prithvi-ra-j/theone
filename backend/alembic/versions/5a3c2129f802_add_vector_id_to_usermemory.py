"""add vector_id to usermemory

Revision ID: 5a3c2129f802
Revises: 7102fdaf7caa
Create Date: 2025-09-22 02:26:50.088104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5a3c2129f802'
down_revision = '7102fdaf7caa'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Choose JSON type compatible with the target dialect. SQLite doesn't
    # support JSONB, so fall back to TEXT (or sa.JSON when available).
    bind = op.get_bind()
    dialect_name = getattr(getattr(bind, 'dialect', None), 'name', '')
    if dialect_name == 'sqlite':
        prefs_type = sa.Text()
        metadata_type = sa.Text()
    else:
        try:
            prefs_type = postgresql.JSONB(astext_type=sa.Text())
            metadata_type = postgresql.JSONB(astext_type=sa.Text())
        except Exception:
            prefs_type = sa.JSON()
            metadata_type = sa.JSON()

    op.create_table('mini_assistants',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('avatar', sa.String(length=100), nullable=False),
        sa.Column('personality', sa.String(length=50), nullable=False),
        sa.Column('color_theme', sa.String(length=50), nullable=True),
        sa.Column('greeting_message', sa.Text(), nullable=True),
        sa.Column('preferences', prefs_type, nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mini_assistants_id'), 'mini_assistants', ['id'], unique=False)
    op.create_table('assistant_interactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('assistant_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('interaction_type', sa.String(length=50), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('interaction_metadata', metadata_type, nullable=True),
        sa.Column('is_read', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['assistant_id'], ['mini_assistants.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assistant_interactions_id'), 'assistant_interactions', ['id'], unique=False)
    op.create_table('habitlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('habit_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('difficulty_rating', sa.Integer(), nullable=True),
    sa.Column('satisfaction_rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['habit_id'], ['habit.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_habitlog_id'), 'habitlog', ['id'], unique=False)
    op.add_column('usermemory', sa.Column('vector_id', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('usermemory', 'vector_id')
    op.drop_index(op.f('ix_habitlog_id'), table_name='habitlog')
    op.drop_table('habitlog')
    op.drop_index(op.f('ix_assistant_interactions_id'), table_name='assistant_interactions')
    op.drop_table('assistant_interactions')
    op.drop_index(op.f('ix_mini_assistants_id'), table_name='mini_assistants')
    op.drop_table('mini_assistants')
    # ### end Alembic commands ###