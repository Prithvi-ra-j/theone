"""create all tables

Revision ID: 04aa8b881b32
Revises: 9e6bc9cb8105
Create Date: 2025-09-19 01:23:32.859526

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '04aa8b881b32'
down_revision = '9e6bc9cb8105'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('rarity', sa.String(length=20), nullable=False),
    sa.Column('criteria', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_hidden', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_badge_id'), 'badge', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('rarity_score', sa.Float(), nullable=False),
    sa.Column('achieved_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_achievement_id'), 'achievement', ['id'], unique=False)
    op.create_table('budget',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('spent_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('alert_threshold', sa.Float(), nullable=False),
    sa.Column('alert_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_id'), 'budget', ['id'], unique=False)
    op.create_table('careergoal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('progress_percentage', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_careergoal_id'), 'careergoal', ['id'], unique=False)
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('message_index', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=50), nullable=False),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('intent', sa.String(length=100), nullable=True),
    sa.Column('sentiment', sa.String(length=20), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('was_helpful', sa.Boolean(), nullable=True),
    sa.Column('feedback_notes', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=False)
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('merchant', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurring_frequency', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expense_id'), 'expense', ['id'], unique=False)
    op.create_table('financialgoal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('goal_type', sa.String(length=50), nullable=False),
    sa.Column('target_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('current_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('target_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('monthly_contribution', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financialgoal_id'), 'financialgoal', ['id'], unique=False)
    op.create_table('habit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('frequency', sa.String(length=20), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('preferred_time', sa.Time(), nullable=True),
    sa.Column('reminder_enabled', sa.Boolean(), nullable=False),
    sa.Column('reminder_time', sa.Time(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('total_completions', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_completed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_habit_id'), 'habit', ['id'], unique=False)
    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('date_received', sa.Date(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurring_frequency', sa.String(length=20), nullable=True),
    sa.Column('is_taxable', sa.Boolean(), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_income_id'), 'income', ['id'], unique=False)
    op.create_table('learningpath',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('field', sa.String(length=100), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('estimated_duration_weeks', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('progress_percentage', sa.Float(), nullable=False),
    sa.Column('current_milestone', sa.String(length=255), nullable=True),
    sa.Column('milestones', sa.Text(), nullable=True),
    sa.Column('resources', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learningpath_id'), 'learningpath', ['id'], unique=False)
    op.create_table('moodlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mood_score', sa.Integer(), nullable=False),
    sa.Column('mood_label', sa.String(length=50), nullable=True),
    sa.Column('energy_level', sa.Integer(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=True),
    sa.Column('anxiety_level', sa.Integer(), nullable=True),
    sa.Column('motivation_level', sa.Integer(), nullable=True),
    sa.Column('confidence_level', sa.Integer(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('sleep_quality', sa.Integer(), nullable=True),
    sa.Column('exercise_minutes', sa.Integer(), nullable=True),
    sa.Column('water_intake', sa.Float(), nullable=True),
    sa.Column('activities', sa.Text(), nullable=True),
    sa.Column('triggers', sa.Text(), nullable=True),
    sa.Column('social_interactions', sa.Integer(), nullable=True),
    sa.Column('weather', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('gratitude_notes', sa.Text(), nullable=True),
    sa.Column('goals_completed', sa.Integer(), nullable=True),
    sa.Column('productivity_rating', sa.Integer(), nullable=True),
    sa.Column('logged_at', sa.DateTime(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moodlog_id'), 'moodlog', ['id'], unique=False)
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('current_level', sa.String(length=20), nullable=False),
    sa.Column('target_level', sa.String(length=20), nullable=False),
    sa.Column('proficiency_score', sa.Float(), nullable=False),
    sa.Column('is_priority', sa.Boolean(), nullable=False),
    sa.Column('learning_resources', sa.Text(), nullable=True),
    sa.Column('practice_hours', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_practiced', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skill_id'), 'skill', ['id'], unique=False)
    op.create_table('userbadge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.Column('progress_value', sa.Float(), nullable=True),
    sa.Column('is_notified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['badge_id'], ['badge.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userbadge_id'), 'userbadge', ['id'], unique=False)
    op.create_table('usermemory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('importance_score', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.Column('context', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usermemory_id'), 'usermemory', ['id'], unique=False)
    op.create_table('userstats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('current_level_xp', sa.Integer(), nullable=False),
    sa.Column('next_level_xp', sa.Integer(), nullable=False),
    sa.Column('current_login_streak', sa.Integer(), nullable=False),
    sa.Column('longest_login_streak', sa.Integer(), nullable=False),
    sa.Column('career_goals_completed', sa.Integer(), nullable=False),
    sa.Column('skills_learned', sa.Integer(), nullable=False),
    sa.Column('learning_hours', sa.Float(), nullable=False),
    sa.Column('habits_completed', sa.Integer(), nullable=False),
    sa.Column('longest_habit_streak', sa.Integer(), nullable=False),
    sa.Column('total_habit_days', sa.Integer(), nullable=False),
    sa.Column('total_expenses_tracked', sa.Integer(), nullable=False),
    sa.Column('budgets_maintained', sa.Integer(), nullable=False),
    sa.Column('savings_goals_achieved', sa.Integer(), nullable=False),
    sa.Column('mood_logs_count', sa.Integer(), nullable=False),
    sa.Column('average_mood_score', sa.Float(), nullable=False),
    sa.Column('wellness_streak', sa.Integer(), nullable=False),
    sa.Column('badges_earned', sa.Integer(), nullable=False),
    sa.Column('achievements_unlocked', sa.Integer(), nullable=False),
    sa.Column('total_app_sessions', sa.Integer(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_userstats_id'), 'userstats', ['id'], unique=False)
    op.create_table('embedding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memory_id', sa.Integer(), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('embedding_model', sa.String(length=100), nullable=False),
    sa.Column('embedding_vector', sa.LargeBinary(), nullable=False),
    sa.Column('vector_dimension', sa.Integer(), nullable=False),
    sa.Column('embedding_version', sa.String(length=20), nullable=False),
    sa.Column('embedding_quality', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['usermemory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_embedding_id'), 'embedding', ['id'], unique=False)
    op.create_table('habitcompletion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('habit_id', sa.Integer(), nullable=False),
    sa.Column('completed_date', sa.Date(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=False),
    sa.Column('actual_value', sa.Float(), nullable=True),
    sa.Column('quality_rating', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('mood_before', sa.Integer(), nullable=True),
    sa.Column('mood_after', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('weather', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['habit_id'], ['habit.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_habitcompletion_id'), 'habitcompletion', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_habitcompletion_id'), table_name='habitcompletion')
    op.drop_table('habitcompletion')
    op.drop_index(op.f('ix_embedding_id'), table_name='embedding')
    op.drop_table('embedding')
    op.drop_index(op.f('ix_userstats_id'), table_name='userstats')
    op.drop_table('userstats')
    op.drop_index(op.f('ix_usermemory_id'), table_name='usermemory')
    op.drop_table('usermemory')
    op.drop_index(op.f('ix_userbadge_id'), table_name='userbadge')
    op.drop_table('userbadge')
    op.drop_index(op.f('ix_skill_id'), table_name='skill')
    op.drop_table('skill')
    op.drop_index(op.f('ix_moodlog_id'), table_name='moodlog')
    op.drop_table('moodlog')
    op.drop_index(op.f('ix_learningpath_id'), table_name='learningpath')
    op.drop_table('learningpath')
    op.drop_index(op.f('ix_income_id'), table_name='income')
    op.drop_table('income')
    op.drop_index(op.f('ix_habit_id'), table_name='habit')
    op.drop_table('habit')
    op.drop_index(op.f('ix_financialgoal_id'), table_name='financialgoal')
    op.drop_table('financialgoal')
    op.drop_index(op.f('ix_expense_id'), table_name='expense')
    op.drop_table('expense')
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_index(op.f('ix_careergoal_id'), table_name='careergoal')
    op.drop_table('careergoal')
    op.drop_index(op.f('ix_budget_id'), table_name='budget')
    op.drop_table('budget')
    op.drop_index(op.f('ix_achievement_id'), table_name='achievement')
    op.drop_table('achievement')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_badge_id'), table_name='badge')
    op.drop_table('badge')
    # ### end Alembic commands ###